##################################################################################################
## 조건 1: 수평으로 두 칸 이동한 뒤에 수직으로 한 칸 이동
## 조건 2: 수직으로 두 칸 이동한 뒤에 수평으로 한 칸 이동
## 조건 3: 8X8 그리드 맵 내에서만 움직여야함
## 입력 : 8X8 좌표 평면상에서 물체가 위치한 곳의 좌표를 나타내는 두 문자로 구성된 문자열 입력 EX)a1 처럼 열과 행으로 구성
## 출력 : 첫째 줄에 나이트가 이동 할 수 있는 경우의 수를 출력
##################################################################################################
# 시뮬레이션(구현)
n=input() #좌표 입력

vol = ['a','b','c','d','e','f','g','h']
vol_count=1
for i in range(len(vol)):
    if n[0] == vol[i]:
        vol_count_save = vol_count #열인 문자를 열에 맞는 숫자로 변환
        break
    vol_count+=1
dx = [[-1,-1,0], #조건1과 조건2로 움직일 수 있는 x좌표 
      [-1,-1,0],
      [0,0,1],
      [0,0,-1],
      [0,0,-1],
      [0,0,1],
      [1,1,0],
      [1,1,0]]
dy = [[0,0,1],  #조건1과 조건2로 움직일 수 있는 y좌표 
      [0,0,-1],
      [1,1,0],
      [1,1,0],
      [-1,-1,0],
      [-1,-1,0],
      [0,0,1],
      [0,0,-1]]

count = 0
#for i in range(8):
for j in range(0,len(dx)):
    x = vol_count #x 초기화
    y = int(n[1]) #y 초기화
    for k in range(3):
        x = x + dx[j][k] #주어진 좌표 만큼 이동
        y = y + dy[j][k]
    if x>=1 and y>=1 and x<=8 and y<=8:count+=1 #이동한 좌표에 대해서  8x8 그리드 내에 있으면 count 증가


print(count)


